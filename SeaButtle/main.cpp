#include "ClassPole.hpp"
#include "SeaButtle.h"

Pole PoleIgroka;
Pole PoleComp;

int main() {
    srand((unsigned)time(NULL));
    setlocale(LC_CTYPE,"rus");
    std::cout <<"\n Добро пожаловать! Сегодня я буду вашим противником. Что ж, посмотрим, кто из нас сильнее. Удачи! \n";
    std::cout <<" Внимание! Координаты отсчитываются сверху вниз, как в классическом варианте игры, для вашего удобства, столбцы и строки пронумерованы. \n";
    std::cout <<" Краткие правила игры: \n";
    std::cout <<" Цель игры: разбить флот противника, потопив все его корабли. \n";
    std::cout <<" В морской баталии могут принять участие 2 адмирала, сегодня я буду одним из них. Для начала вам нужно расставить ваши корабли: четыре шлюпки, три эсминца, два крейсера и четырехпалубный линкор. Поле будет вашим театром действий в этой битве! \n Перед вами стоит стратегически важная задача, адмирал! Вам нужно расположить корабли на поле таким образом, чтобы мне было как можно сложнее распознать их местонахождение. Ваши суда могут быть расставлены в хаотичном порядке: вертикально, горизонтально или даже на краю поля битвы; главное - чтобы между ними было расстояние не менее одной точки поля. \n";
    int paluba = 4, kolvo = 1;
    PoleIgroka.print();
    int vubor=0;
    do{
        std::cout<<"\n Выберите растановку кораблей  - Вручную(1)  - Автоматически(2) \n";
        std::cin >> vubor;
        if (vubor < 1 || vubor > 2){
            std::cout<<"\n Неверный выбор \n";
        }
    } while (vubor < 1 || vubor > 2);
    if (vubor == 1){
        pointKorablVruchnuy();
    }
    else if (vubor == 2){
        int otv;
        do {
            PoleIgroka.clear();
            pointKorabl(paluba, kolvo);
            PoleIgroka.print();
            std::cout <<" Вас устраивает данная расстановка? Введите 1, если да, и 0, если нет.";
            std::cin >> otv;
        } while (otv == 0);
    }
    int level = 0;
    std::cout <<"\n Хотели бы вы играть с сильным противником? \n";
    std::cout <<" Выберите уровень сложности: введите 1 или 2. \n";
    std::cin >> level;
    if (level == 2) pointHardPC();
    else pointKorablPC(paluba, kolvo);
    std::cout <<"\n Что ж, все готово, идём на абордаж! Пушки наготове, адмирал! Самое время определиться, кто делает первый ход, и приступить к захвату морских путей. \n";
    std::cout <<" Вы будете ходить 1-ым или 2-ым? Введите цифру 1 или 2. \n";
    int k = 0;
    do{
        std::cin >>k;
        if (k != 1 && k != 2) std::cout <<"Так не пойдет, нас только двое. Введите 1 или 2.";
    }while(k != 1 && k != 2);
    std::cout <<"\n Выстрелы мимо цели обозначаются '*', ранения обозначаются 'X', при потоплении корабля вокруг него будет обозначено знаком '.' пустое водное пространство \n Игра считается оконченной, как только будут повержены все корабли одного флота. \n";
    std::cout <<"\n Удачи вам, моряк! \n \n";
    if (k == 1) HodIgroka();
    else if (k == 2) HodPC();
    return 0;
}
